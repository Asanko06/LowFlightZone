import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import api from "../services/api";
import terminalImage from "../assets/terminal.png";
import "../styles/FlightDetails.css";

const FlightDetails = () => {
    const { flightId } = useParams();
    const [flight, setFlight] = useState(null);
    const [expanded, setExpanded] = useState(true);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState("");
    const navigate = useNavigate();

    useEffect(() => {
        fetchFlight();
    }, [flightId]);

    const fetchFlight = async () => {
        try {
            setLoading(true);
            const res = await api.get(`/flights/${flightId}`);
            setFlight(res.data);
        } catch (e) {
            console.error(e);
            setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Å–∞");
        } finally {
            setLoading(false);
        }
    };

    const getBoardingTimeInfo = () => {
        if (!flight?.scheduledDeparture) return null;
        const boardingEnd = new Date(flight.scheduledDeparture);
        const now = new Date();
        const diffMinutes = Math.floor((boardingEnd - now) / 60000);

        if (diffMinutes <= 0) return { text: "–ü–æ—Å–∞–¥–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞", color: "red" };
        if (diffMinutes < 20) return { text: `–ü–æ—Å–∞–¥–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ${diffMinutes} –º–∏–Ω`, color: "red" };
        if (diffMinutes < 60) return { text: `–ü–æ—Å–∞–¥–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ${diffMinutes} –º–∏–Ω`, color: "orange" };
        return { text: `–ü–æ—Å–∞–¥–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ${Math.floor(diffMinutes / 60)} —á ${diffMinutes % 60} –º–∏–Ω`, color: "black" };
    };

    const addDelayToTime = (date, delayMinutes) => {
        if (!date || !delayMinutes) return date;
        return new Date(new Date(date).getTime() + delayMinutes * 60000);
    };

    if (loading) return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    if (error) return <div className="error">{error}</div>;
    if (!flight) return <div className="error">–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;

    const cancelled = flight.status?.toLowerCase() === "cancelled";
    const arrived = flight.status?.toLowerCase() === "arrived";
    const delayed = flight.delayMinutes && flight.delayMinutes > 0;
    const boardingInfo = !cancelled && !arrived ? getBoardingTimeInfo() : null;

    const adjustedDeparture = arrived && delayed
        ? addDelayToTime(flight.scheduledDeparture, flight.delayMinutes)
        : flight.actualDeparture;

    const adjustedArrival = arrived && delayed
        ? addDelayToTime(flight.scheduledArrival, flight.delayMinutes)
        : flight.actualArrival;

    return (
        <div className="flight-container">
            {/* üõ´ –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ */}
            <div className="flight-header">
                <h2>{flight.departureAirport?.name}</h2>
                <p>{flight.departureAirport?.iataCode} Elev. {flight.departureAirport?.altitude}ft</p>
            </div>

            {/* üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π */}
            <div className="details-layout">
                <div className="details-left">
                    {/* üó∫Ô∏è –°—Ö–µ–º–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (–Ω–∞ –º–æ–±–∏–ª–∫–µ ‚Äî –±—É–¥–µ—Ç —Ç—É—Ç) */}
                    <div className="terminal-mobile">
                        <img src={terminalImage} alt="Terminal map" className="terminal-image" />
                    </div>

                    {/* ‚úàÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ */}
                    <div className="route-block">
                        <h3>{flight.arrivalAirport?.city} ({flight.flightNumber})</h3>
                        <button className="toggle-button" onClick={() => setExpanded(!expanded)}>
                            {expanded ? "‚ñ≤" : "‚ñº"}
                        </button>
                    </div>

                    {/* üìä –¢–∞–±–ª–∏—Ü–∞ */}
                    {expanded && (
                        <div className="table">
                            {!cancelled ? (
                                <>
                                    <div className="row">
                                        <div className="cell with-border">
                                            <strong>–ü–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –≤—ã–ª–µ—Ç:</strong>
                                            <div>{formatDate(flight.scheduledDeparture)}</div>
                                        </div>
                                        <div className="cell">
                                            <strong>–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–ª–µ—Ç:</strong>
                                            <div>
                                                {arrived
                                                    ? delayed
                                                        ? formatDate(adjustedDeparture)
                                                        : "‚Äî"
                                                    : adjustedDeparture
                                                        ? formatDate(adjustedDeparture)
                                                        : "‚Äî"}
                                            </div>
                                        </div>
                                    </div>

                                    <div className="row">
                                        <div className="cell with-border">
                                            <strong>–ü–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ø—Ä–∏–±—ã—Ç–∏–µ:</strong>
                                            <div>{formatDate(flight.scheduledArrival)}</div>
                                        </div>
                                        <div className="cell">
                                            <strong>–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–±—ã—Ç–∏–µ:</strong>
                                            <div>
                                                {arrived
                                                    ? delayed
                                                        ? formatDate(adjustedArrival)
                                                        : "‚Äî"
                                                    : adjustedArrival
                                                        ? formatDate(adjustedArrival)
                                                        : "‚Äî"}
                                            </div>
                                        </div>
                                    </div>

                                    <div className="row">
                                        <div className="cell">
                                            <strong>–°—Ç–∞—Ç—É—Å —Ä–µ–π—Å–∞:</strong>
                                            <div>{flight.status || "‚Äî"}</div>
                                            {delayed && (
                                                <div className="delay-text">
                                                    –ó–∞–¥–µ—Ä–∂–∫–∞: {flight.delayMinutes} –º–∏–Ω
                                                </div>
                                            )}
                                        </div>
                                    </div>

                                    <div className="row">
                                        <div className="cell with-border">
                                            <strong>–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è:</strong>
                                            <div>{flight.airline}</div>
                                        </div>
                                        <div className="cell">
                                            <strong>–†–µ–π—Å ‚Ññ:</strong>
                                            <div>{flight.flightNumber}</div>
                                        </div>
                                    </div>
                                </>
                            ) : (
                                <div className="cancelled-block">üõë –†–µ–π—Å –æ—Ç–º–µ–Ω—ë–Ω. –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.</div>
                            )}
                        </div>
                    )}

                    {!cancelled && !arrived && (
                        <div className="gate-block">–ü–æ—Å–∞–¥–∫–∞ –Ω–∞ —Ä–µ–π—Å –∏–∑ –≥–µ–π—Ç–∞ {flight.gate || "‚Äî"}</div>
                    )}

                    {!cancelled && !arrived && boardingInfo && (
                        <div className="boarding-time" style={{ color: boardingInfo.color }}>
                            {boardingInfo.text}
                        </div>
                    )}

                    {arrived && <div className="completed-footer">‚úàÔ∏è –ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî —Ä–µ–π—Å –ø—Ä–∏–±—ã–ª.</div>}
                    {cancelled && <div className="cancelled-footer">‚úàÔ∏è –†–µ–π—Å –æ—Ç–º–µ–Ω—ë–Ω ‚Äî –ø–æ—Å–∞–¥–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.</div>}

                    <button className="back-button" onClick={() => navigate(-1)}>‚Üê –ù–∞–∑–∞–¥</button>
                </div>

                {/* üñ•Ô∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å–±–æ–∫—É (–ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ü–ö) */}
                <div className="details-right">
                    <img src={terminalImage} alt="Terminal map" className="terminal-image" />
                </div>
            </div>
        </div>
    );
};

const formatDate = (date) => {
    if (!date) return "‚Äî";
    return new Date(date).toLocaleString("ru-RU", {
        day: "2-digit",
        month: "short",
        hour: "2-digit",
        minute: "2-digit",
    });
};

export default FlightDetails;
